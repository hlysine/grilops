diff --git a/node_modules/z3-solver/build/high-level/high-level.js b/node_modules/z3-solver/build/high-level/high-level.js
index c1f401b..254dc4e 100644
--- a/node_modules/z3-solver/build/high-level/high-level.js
+++ b/node_modules/z3-solver/build/high-level/high-level.js
@@ -498,6 +498,7 @@ function createApi(Z3) {
                 }
                 return new BoolImpl(Z3.mk_false(contextPtr));
             },
+            ptr: (pointer) => new BoolImpl(pointer),
         };
         const Int = {
             sort: () => new ArithSortImpl(Z3.mk_int_sort(contextPtr)),
diff --git a/node_modules/z3-solver/build/high-level/types.d.ts b/node_modules/z3-solver/build/high-level/types.d.ts
index 3538ac4..7e1c062 100644
--- a/node_modules/z3-solver/build/high-level/types.d.ts
+++ b/node_modules/z3-solver/build/high-level/types.d.ts
@@ -574,6 +574,8 @@ export interface BoolCreation<Name extends string = 'main'> {
     vector(prefix: string, count: number): Bool<Name>[];
     fresh(prefix?: string): Bool<Name>;
     val(value: boolean): Bool<Name>;
+    /** UNSAFE */
+    ptr(pointer: Z3_ast): Bool<Name>;
 }
 /** @category Booleans */
 export interface Bool<Name extends string = 'main'> extends Expr<Name, BoolSort<Name>, Z3_ast> {
